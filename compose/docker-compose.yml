version: '2.1'
volumes:
  mongo_data:
  cassandra_data:
services:

  konga:
    image: pantsel/konga:latest
    container_name: konga
    network_mode: host
    depends_on:
      - kong
    ports:
      - 1337:1337
    environment:
      - DB_ADAPTER=mongo
      - DB_HOST=localhost
      - DB_DATABASE=konga
      - NODE_ENV=development

  mongo:
    container_name: db
    image: mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - 127.0.0.1:27017:27017
    network_mode: host
  consul:
    container_name: consul
    image: progrium/consul:latest
    command: -server -bootstrap -ui-dir /ui
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8500 || exit 1"]
      interval: 5s
      retries: 10
    ports:
      - 8500:8500
      - 54:53
    expose:
#      - 53
      - 8300
      - 8301
      - 8302
      - 8400
      - 8500
    dns:
      - 127.0.0.1
    network_mode: host

  nginx-lb:
    build: nginx/
    depends_on:
      consul:
        condition: service_healthy
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    expose:
      - 8000
      - 8443
      - 8001
      - 8444
    command: >
        /bin/containerpilot
        -config file:///etc/containerpilot/containerpilot.json
        nginx -g "daemon off;"
    network_mode: host

  kong-database:
    image: postgres:9.5
    container_name: kong-database
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=localhost
    command: kong migrations up --vv
    network_mode: host

  kong:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=localhost
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=localhost:8001
    expose:
      - 8000
      - 8001
      - 8443
      - 8444
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10
    network_mode: host